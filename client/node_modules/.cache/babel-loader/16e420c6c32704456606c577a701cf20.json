{"ast":null,"code":"import { UPDATE_PRODUCTS, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from \"./actions\";\nimport { useReducer } from 'react';\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.products]\n      };\n    // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n\n    case UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.categories]\n      };\n\n    default:\n      return state;\n\n    case UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.currentCategory\n      };\n  }\n};\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}","map":{"version":3,"sources":["/Users/jesshauseugray/Library/Mobile Documents/com~apple~CloudDocs/Documents/Bootcamp projects/shop-shop/client/src/utils/reducers.js"],"names":["UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","useReducer","reducer","state","action","type","products","categories","currentCategory","useProductReducer","initialState"],"mappings":"AAAA,SACEA,eADF,EAEEC,iBAFF,EAGEC,uBAHF,QAIO,WAJP;AAMA,SAASC,UAAT,QAA2B,OAA3B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKP,eAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAX;AAFL,OAAP;AAIF;;AACA,SAAKP,iBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELI,QAAAA,UAAU,EAAE,CAAC,GAAGH,MAAM,CAACG,UAAX;AAFP,OAAP;;AAKF;AACE,aAAOJ,KAAP;;AAEN,SAAKH,uBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELK,QAAAA,eAAe,EAAEJ,MAAM,CAACI;AAFnB,OAAP;AAlBA;AAwBD,CAzBM;AA4BP,OAAO,SAASC,iBAAT,CAA2BC,YAA3B,EAAyC;AAC9C,SAAOT,UAAU,CAACC,OAAD,EAAUQ,YAAV,CAAjB;AACD","sourcesContent":["import {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY\n} from \"./actions\";\n\nimport { useReducer } from 'react';\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products]\n      };\n    // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories]\n      };\n\n    default:\n      return state;\n\ncase UPDATE_CURRENT_CATEGORY:\n  return {\n    ...state,\n    currentCategory: action.currentCategory\n  };\n\n  }\n};\n\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}"]},"metadata":{},"sourceType":"module"}